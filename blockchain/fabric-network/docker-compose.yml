version: '3'

services:
  # 顺序服务节点
  orderer:
    image: hyperledger/fabric-orderer:latest
    container_name: orderer.example.com
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
    ports:
      - 7050:7050
    volumes:
      - ./crypto-config/ordererOrg/orderers/orderer.example.com/msp:/etc/hyperledger/orderer/msp
      - ./crypto-config/ordererOrg/orderers/orderer.example.com/tls:/etc/hyperledger/orderer/tls
      - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    command: orderer

  # 组织 1 的 CA 节点
  ca.org1:
    image: hyperledger/fabric-ca:latest
    container_name: ca.org1.example.com
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - FABRIC_CA_SERVER_TLS_ENABLED=true
      - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
    ports:
      - 7054:7054
    volumes:
      - ./crypto-config/peerOrgs/org1.example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    command: sh -c 'fabric-ca-server start'

  # 组织 1 的 Peer 节点
  peer0.org1:
    image: hyperledger/fabric-peer:latest
    container_name: peer0.org1.example.com
    environment:
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca.crt
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_EXTERNOADDR=peer0.org1.example.com:7051
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - ./crypto-config/peerOrgs/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/msp/peer/msp
      - ./crypto-config/peerOrgs/org1.example.com/peers/peer0.org1.example.com/tls:/etc/hyperledger/tls
    command: peer node start

  # 控制台容器（用于命令行交互）
  cli:
    image: hyperledger/fabric-tools:latest
    container_name: cli
    tty: true
    environment:
      - GOPATH=/root/go
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer/msp
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/tls/ca.crt
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    volumes:
      - ./crypto-config:/etc/hyperledger/crypto-config
      - ./channel-artifacts:/etc/hyperledger/artifacts
      - ./scripts:/opt/gopath/src/github.com/hyperledger/fabric/peer/scripts
    command: /bin/bash
