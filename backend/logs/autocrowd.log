2025-10-07 00:00:48.179 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.autocrowd.backend.exception.BusinessException: 无效的令牌
	at com.autocrowd.backend.util.JwtFilter.doFilter(JwtFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-10-07 00:02:43.086 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:43.096 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:43.327 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:43.339 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:43.423 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:43.435 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:43.649 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:43.668 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:44.963 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:44.967 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:45.287 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:45.294 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:45.294 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:45.305 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:45.635 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:45.641 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:05:40.162 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:05:40.168 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:05:40.235 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:05:40.238 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:07:10.636 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:07:10.643 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:07:10.661 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:07:10.667 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:07:10.677 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:07:10.681 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:07:10.710 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:07:10.719 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:08:48.165 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:08:48.172 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:08:48.189 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:08:48.192 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:13:09.453 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:13:09.458 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:13:09.472 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:13:09.476 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:13:09.480 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:13:09.484 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:13:09.506 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:13:09.510 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:18.350 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:18.355 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:18.684 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:18.688 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:23.933 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:23.937 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:24.253 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:24.256 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.614 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:27.618 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.877 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:27.879 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.941 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:27.945 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:27.963 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:27.968 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:37.384 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:37.389 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:37.402 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:37.408 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:37.422 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:37.427 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:37.443 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:37.449 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:17:02.269 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.273 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:02.590 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.593 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:02.931 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.935 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:03.194 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:03.198 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:03.258 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:17:03.261 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:17:03.272 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:17:03.274 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:18:00.925 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:00.932 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.259 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.262 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.578 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.582 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.903 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:18:01.905 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.908 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:18:01.910 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:02.241 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:18:02.245 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:37:30.399 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:30.404 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:30.731 [http-nio-8080-exec-8] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:37:48.810 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:48.815 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:48.829 [http-nio-8080-exec-2] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:37:52.821 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:52.825 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:52.878 [http-nio-8080-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:39:03.522 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:03.528 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:03.544 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:03.549 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:03.583 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:39:03.587 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:39:03.612 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:39:03.618 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:39:07.797 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:07.803 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:08.041 [http-nio-8080-exec-2] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:40:00.088 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:00.091 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:00.423 [http-nio-8080-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:40:35.772 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:35.777 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:38.244 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:38.249 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:44.047 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:44.052 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.836 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:23.841 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.859 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:23.864 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.877 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:44:23.882 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:44:23.899 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:44:23.904 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:44:29.563 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:29.568 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:33.315 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:33.321 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:47:39.974 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 00:47:39.975 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 00:47:39.979 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 00:47:39.992 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
