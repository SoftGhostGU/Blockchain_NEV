2025-10-07 00:00:48.179 [http-nio-8080-exec-5] ERROR o.a.c.c.C.[.[localhost].[/].[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception
com.autocrowd.backend.exception.BusinessException: 无效的令牌
	at com.autocrowd.backend.util.JwtFilter.doFilter(JwtFilter.java:62)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
2025-10-07 00:02:43.086 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:43.096 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:43.327 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:43.339 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:43.423 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:43.435 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:43.649 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:43.668 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:44.963 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:44.967 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:45.287 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:02:45.294 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:02:45.294 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:45.305 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:02:45.635 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:02:45.641 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:05:40.162 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:05:40.168 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:05:40.235 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:05:40.238 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:07:10.636 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:07:10.643 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:07:10.661 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:07:10.667 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:07:10.677 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:07:10.681 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:07:10.710 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:07:10.719 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:08:48.165 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:08:48.172 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:08:48.189 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:08:48.192 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:13:09.453 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:13:09.458 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:13:09.472 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:13:09.476 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:13:09.480 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:13:09.484 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:13:09.506 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:13:09.510 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:18.350 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:18.355 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:18.684 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:18.688 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:23.933 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:23.937 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:24.253 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:24.256 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.614 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:27.618 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.877 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:27.879 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:27.941 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:27.945 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:27.963 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:27.968 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:37.384 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:37.389 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:37.402 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:15:37.408 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:15:37.422 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:37.427 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:15:37.443 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:15:37.449 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:17:02.269 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.273 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:02.590 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.593 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:02.931 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:02.935 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:03.194 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:17:03.198 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:17:03.258 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:17:03.261 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:17:03.272 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:17:03.274 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:18:00.925 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:00.932 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.259 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.262 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.578 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.582 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:01.903 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:18:01.905 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:18:01.908 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:18:01.910 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:18:02.241 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:18:02.245 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:37:30.399 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:30.404 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:30.731 [http-nio-8080-exec-8] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:37:48.810 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:48.815 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:48.829 [http-nio-8080-exec-2] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:37:52.821 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:37:52.825 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:37:52.878 [http-nio-8080-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:39:03.522 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:03.528 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:03.544 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:03.549 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:03.583 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:39:03.587 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:39:03.612 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:39:03.618 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:39:07.797 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:39:07.803 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:39:08.041 [http-nio-8080-exec-2] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:40:00.088 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:00.091 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:00.423 [http-nio-8080-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' is not supported]
2025-10-07 00:40:35.772 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:35.777 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:38.244 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:38.249 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:40:44.047 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:40:44.052 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.836 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:23.841 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.859 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:23.864 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:23.877 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:44:23.882 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:44:23.899 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 00:44:23.904 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 00:44:29.563 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:29.568 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:44:33.315 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 00:44:33.321 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 00:47:39.974 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 00:47:39.975 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 00:47:39.979 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 00:47:39.992 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-07 12:14:23.234 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-07 12:14:23.281 [main] INFO  com.autocrowd.backend.BackendApplication - Starting BackendApplication using Java 17.0.8.1 with PID 37776 (D:\Project\Blockchain_NEV\backend\target\classes started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 12:14:23.282 [main] INFO  com.autocrowd.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-07 12:14:24.448 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:14:24.450 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 12:14:24.632 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 176 ms. Found 7 JPA repository interfaces.
2025-10-07 12:14:24.647 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:14:24.648 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 12:14:24.666 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.667 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.667 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.668 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.668 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.669 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:14:24.670 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 10 ms. Found 0 Redis repository interfaces.
2025-10-07 12:14:25.492 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-07 12:14:25.504 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-07 12:14:25.506 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-10-07 12:14:25.506 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-10-07 12:14:25.596 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-07 12:14:25.596 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 2266 ms
2025-10-07 12:14:25.904 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 12:14:25.958 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-07 12:14:25.988 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 12:14:26.249 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 12:14:26.276 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 12:14:26.636 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6167c42f
2025-10-07 12:14:26.638 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 12:14:26.698 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 12:14:27.843 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 12:14:27.845 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:14:28.164 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 12:14:28.633 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 12:14:28.634 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 12:14:28.634 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 12:14:28.634 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 12:14:28.634 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 12:14:28.634 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 12:14:28.635 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 12:14:28.635 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 12:14:44.903 [main] ERROR c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化失败: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.967674200s. Name resolution delay 0.008250500 seconds. [closed=[], open=[[buffered_nanos=14987359400, waiting_for_connection]]]
org.hyperledger.fabric.client.EndorseException: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.967674200s. Name resolution delay 0.008250500 seconds. [closed=[], open=[[buffered_nanos=14987359400, waiting_for_connection]]]
	at org.hyperledger.fabric.client.GatewayClient.endorse(GatewayClient.java:74)
	at org.hyperledger.fabric.client.ProposalImpl.endorse(ProposalImpl.java:76)
	at org.hyperledger.fabric.client.Proposal.endorse(Proposal.java:64)
	at org.hyperledger.fabric.client.ContractImpl.submitTransaction(ContractImpl.java:45)
	at com.autocrowd.backend.service.impl.BlockchainServiceImpl.init(BlockchainServiceImpl.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.autocrowd.backend.BackendApplication.main(BackendApplication.java:10)
Caused by: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.967674200s. Name resolution delay 0.008250500 seconds. [closed=[], open=[[buffered_nanos=14987359400, waiting_for_connection]]]
	at io.grpc.stub.ClientCalls.toStatusRuntimeException(ClientCalls.java:268)
	at io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:249)
	at io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:167)
	at org.hyperledger.fabric.protos.gateway.GatewayGrpc$GatewayBlockingStub.endorse(GatewayGrpc.java:455)
	at org.hyperledger.fabric.client.GatewayClient.endorse(GatewayClient.java:72)
	... 57 common frames omitted
2025-10-07 12:14:44.972 [main] INFO  c.a.backend.service.PairingBasedCryptosystem - IBE系统参数初始化完成
2025-10-07 12:14:44.973 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:14:45.071 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 0a3c0c7b-ff57-40bc-bf55-b2c6b61a8efa

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 12:14:45.089 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 12:14:45.821 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 12:14:46.421 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-07 12:14:46.432 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-07 12:14:46.444 [main] INFO  com.autocrowd.backend.BackendApplication - Started BackendApplication in 23.804 seconds (process running for 24.672)
2025-10-07 12:14:46.732 [RMI TCP Connection(4)-192.168.3.86] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-07 12:14:46.732 [RMI TCP Connection(4)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-07 12:14:46.734 [RMI TCP Connection(4)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-10-07 12:20:39.957 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 12:20:39.958 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:20:39.960 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 12:20:39.969 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-07 12:20:44.378 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-07 12:20:44.419 [main] INFO  com.autocrowd.backend.BackendApplication - Starting BackendApplication using Java 17.0.8.1 with PID 34688 (D:\Project\Blockchain_NEV\backend\target\classes started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 12:20:44.420 [main] INFO  com.autocrowd.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-07 12:20:45.354 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:20:45.354 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 12:20:45.501 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 141 ms. Found 7 JPA repository interfaces.
2025-10-07 12:20:45.511 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:20:45.513 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 12:20:45.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.527 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.527 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.527 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.527 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.528 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.528 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:20:45.528 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 9 ms. Found 0 Redis repository interfaces.
2025-10-07 12:20:46.136 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-07 12:20:46.143 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-07 12:20:46.145 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-10-07 12:20:46.146 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-10-07 12:20:46.213 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-07 12:20:46.214 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1748 ms
2025-10-07 12:20:46.459 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 12:20:46.495 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-07 12:20:46.521 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 12:20:46.703 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 12:20:46.719 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 12:20:46.961 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@2a0ce342
2025-10-07 12:20:46.965 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 12:20:47.022 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 12:20:47.865 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 12:20:47.867 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:20:48.195 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 12:20:48.630 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 12:20:48.630 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 12:20:48.631 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 12:21:04.452 [main] ERROR c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化失败: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.976415900s. Name resolution delay 0.008825400 seconds. [closed=[], open=[[buffered_nanos=14991972300, waiting_for_connection]]]
org.hyperledger.fabric.client.EndorseException: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.976415900s. Name resolution delay 0.008825400 seconds. [closed=[], open=[[buffered_nanos=14991972300, waiting_for_connection]]]
	at org.hyperledger.fabric.client.GatewayClient.endorse(GatewayClient.java:74)
	at org.hyperledger.fabric.client.ProposalImpl.endorse(ProposalImpl.java:76)
	at org.hyperledger.fabric.client.Proposal.endorse(Proposal.java:64)
	at org.hyperledger.fabric.client.ContractImpl.submitTransaction(ContractImpl.java:45)
	at com.autocrowd.backend.service.impl.BlockchainServiceImpl.init(BlockchainServiceImpl.java:104)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:401)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:219)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1798)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.resolveFieldValue(AutowiredAnnotationBeanPostProcessor.java:784)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:767)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:145)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessProperties(AutowiredAnnotationBeanPostProcessor.java:508)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1439)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:599)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1375)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1212)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:337)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:971)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:625)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1363)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1352)
	at com.autocrowd.backend.BackendApplication.main(BackendApplication.java:10)
Caused by: io.grpc.StatusRuntimeException: DEADLINE_EXCEEDED: CallOptions deadline exceeded after 14.976415900s. Name resolution delay 0.008825400 seconds. [closed=[], open=[[buffered_nanos=14991972300, waiting_for_connection]]]
	at io.grpc.stub.ClientCalls.toStatusRuntimeException(ClientCalls.java:268)
	at io.grpc.stub.ClientCalls.getUnchecked(ClientCalls.java:249)
	at io.grpc.stub.ClientCalls.blockingUnaryCall(ClientCalls.java:167)
	at org.hyperledger.fabric.protos.gateway.GatewayGrpc$GatewayBlockingStub.endorse(GatewayGrpc.java:455)
	at org.hyperledger.fabric.client.GatewayClient.endorse(GatewayClient.java:72)
	... 57 common frames omitted
2025-10-07 12:21:04.521 [main] INFO  c.a.backend.service.PairingBasedCryptosystem - IBE系统参数初始化完成
2025-10-07 12:21:04.522 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:21:04.581 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 0b13d2f5-28e4-452d-bea0-1c42d72b75d0

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 12:21:04.593 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 12:21:05.112 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 12:21:05.630 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-07 12:21:05.638 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-07 12:21:05.648 [main] INFO  com.autocrowd.backend.BackendApplication - Started BackendApplication in 21.716 seconds (process running for 22.308)
2025-10-07 12:21:05.948 [RMI TCP Connection(2)-192.168.3.86] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-07 12:21:05.949 [RMI TCP Connection(2)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-07 12:21:05.950 [RMI TCP Connection(2)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-07 12:23:11.491 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:23:11.600 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:23:11.647 [http-nio-8080-exec-3] WARN  org.hibernate.engine.jdbc.spi.SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
2025-10-07 12:23:11.647 [http-nio-8080-exec-3] ERROR org.hibernate.engine.jdbc.spi.SqlExceptionHelper - Unknown column 'vc1_0.audit_status' in 'field list'
2025-10-07 12:23:11.648 [http-nio-8080-exec-3] INFO  o.h.event.internal.DefaultLoadEventListener - HHH000327: Error performing load command
org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select vc1_0.condition_id,vc1_0.audit_status,vc1_0.battery_percent,vc1_0.body_state,vc1_0.brake_state,vc1_0.license_plate,vc1_0.miles_to_go,vc1_0.power_state,vc1_0.tire_pressure,vc1_0.vehicle_model from vehicle_condition vc1_0 where vc1_0.condition_id=?] [Unknown column 'vc1_0.audit_status' in 'field list'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:264)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:189)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3726)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3715)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1225)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1213)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2429)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2400)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy148.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:321)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy165.findById(Unknown Source)
	at com.autocrowd.backend.service.impl.VehicleServiceImpl.getVehicleConditionByVehicleId(VehicleServiceImpl.java:258)
	at com.autocrowd.backend.controller.VehicleController.getVehicleCondition(VehicleController.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.autocrowd.backend.util.JwtFilter.doFilter(JwtFilter.java:60)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'vc1_0.audit_status' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 204 common frames omitted
2025-10-07 12:23:11.659 [http-nio-8080-exec-3] ERROR c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 获取车辆状况时发生异常: JDBC exception executing SQL [select vc1_0.condition_id,vc1_0.audit_status,vc1_0.battery_percent,vc1_0.body_state,vc1_0.brake_state,vc1_0.license_plate,vc1_0.miles_to_go,vc1_0.power_state,vc1_0.tire_pressure,vc1_0.vehicle_model from vehicle_condition vc1_0 where vc1_0.condition_id=?] [Unknown column 'vc1_0.audit_status' in 'field list'] [n/a]; SQL [n/a]
org.springframework.dao.InvalidDataAccessResourceUsageException: JDBC exception executing SQL [select vc1_0.condition_id,vc1_0.audit_status,vc1_0.battery_percent,vc1_0.body_state,vc1_0.brake_state,vc1_0.license_plate,vc1_0.miles_to_go,vc1_0.power_state,vc1_0.tire_pressure,vc1_0.vehicle_model from vehicle_condition vc1_0 where vc1_0.condition_id=?] [Unknown column 'vc1_0.audit_status' in 'field list'] [n/a]; SQL [n/a]
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)
	at org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:550)
	at org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)
	at org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:335)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)
	at jdk.proxy2/jdk.proxy2.$Proxy165.findById(Unknown Source)
	at com.autocrowd.backend.service.impl.VehicleServiceImpl.getVehicleConditionByVehicleId(VehicleServiceImpl.java:258)
	at com.autocrowd.backend.controller.VehicleController.getVehicleCondition(VehicleController.java:234)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at com.autocrowd.backend.util.JwtFilter.doFilter(JwtFilter.java:60)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.ObservationFilterChainDecorator$FilterObservation$SimpleFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:479)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$1(ObservationFilterChainDecorator.java:340)
	at org.springframework.security.web.ObservationFilterChainDecorator.lambda$wrapSecured$0(ObservationFilterChainDecorator.java:82)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:128)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:227)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.wrapFilter(ObservationFilterChainDecorator.java:240)
	at org.springframework.security.web.ObservationFilterChainDecorator$AroundFilterObservation$SimpleAroundFilterObservation.lambda$wrap$0(ObservationFilterChainDecorator.java:323)
	at org.springframework.security.web.ObservationFilterChainDecorator$ObservationFilter.doFilter(ObservationFilterChainDecorator.java:224)
	at org.springframework.security.web.ObservationFilterChainDecorator$VirtualFilterChain.doFilter(ObservationFilterChainDecorator.java:137)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:195)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:230)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:352)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:268)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.ServerHttpObservationFilter.doFilterInternal(ServerHttpObservationFilter.java:113)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:389)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:904)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1741)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.hibernate.exception.SQLGrammarException: JDBC exception executing SQL [select vc1_0.condition_id,vc1_0.audit_status,vc1_0.battery_percent,vc1_0.body_state,vc1_0.brake_state,vc1_0.license_plate,vc1_0.miles_to_go,vc1_0.power_state,vc1_0.tire_pressure,vc1_0.vehicle_model from vehicle_condition vc1_0 where vc1_0.condition_id=?] [Unknown column 'vc1_0.audit_status' in 'field list'] [n/a]
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:94)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:264)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:167)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.advanceNext(JdbcValuesResultSetImpl.java:265)
	at org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.processNext(JdbcValuesResultSetImpl.java:145)
	at org.hibernate.sql.results.jdbc.internal.AbstractJdbcValues.next(AbstractJdbcValues.java:19)
	at org.hibernate.sql.results.internal.RowProcessingStateStandardImpl.next(RowProcessingStateStandardImpl.java:67)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:189)
	at org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:33)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:211)
	at org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:83)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:76)
	at org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:65)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145)
	at org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117)
	at org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:75)
	at org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3726)
	at org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3715)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560)
	at org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)
	at org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:207)
	at org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:290)
	at org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:242)
	at org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:111)
	at org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:68)
	at org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)
	at org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1225)
	at org.hibernate.internal.SessionImpl.fireLoad(SessionImpl.java:1213)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:209)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.doLoad(IdentifierLoadAccessImpl.java:160)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.lambda$load$1(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.perform(IdentifierLoadAccessImpl.java:112)
	at org.hibernate.loader.internal.IdentifierLoadAccessImpl.load(IdentifierLoadAccessImpl.java:149)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2429)
	at org.hibernate.internal.SessionImpl.find(SessionImpl.java:2400)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$SharedEntityManagerInvocationHandler.invoke(SharedEntityManagerCreator.java:319)
	at jdk.proxy2/jdk.proxy2.$Proxy148.find(Unknown Source)
	at org.springframework.data.jpa.repository.support.SimpleJpaRepository.findById(SimpleJpaRepository.java:321)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:354)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)
	at org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)
	at org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:516)
	at org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:285)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:628)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:168)
	at org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:143)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:379)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)
	... 141 common frames omitted
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'vc1_0.audit_status' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:912)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeQuery(ClientPreparedStatement.java:968)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeQuery(HikariProxyPreparedStatement.java)
	at org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:246)
	... 204 common frames omitted
2025-10-07 12:26:29.065 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 12:26:29.066 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:26:29.068 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 12:26:29.079 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-07 12:32:29.223 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-07 12:32:29.261 [main] INFO  com.autocrowd.backend.BackendApplicationTests - Starting BackendApplicationTests using Java 21.0.6 with PID 35668 (started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 12:32:29.263 [main] INFO  com.autocrowd.backend.BackendApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-10-07 12:32:31.122 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:32:31.125 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 12:32:31.389 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 251 ms. Found 7 JPA repository interfaces.
2025-10-07 12:32:31.451 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:32:31.458 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 12:32:31.508 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.509 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.510 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.510 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.510 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.511 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.511 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:31.511 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 13 ms. Found 0 Redis repository interfaces.
2025-10-07 12:32:32.983 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 12:32:33.098 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-07 12:32:33.165 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 12:32:33.577 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 12:32:33.609 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 12:32:34.015 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@7f5ecada
2025-10-07 12:32:34.017 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 12:32:34.089 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 12:32:35.503 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 12:32:35.506 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:32:36.342 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 12:32:37.310 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 12:32:37.311 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 12:32:37.312 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 12:32:37.312 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 12:32:37.312 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 12:32:37.312 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 12:32:37.313 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 12:32:37.313 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 12:32:43.785 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化成功
2025-10-07 12:32:43.959 [main] INFO  c.a.backend.service.PairingBasedCryptosystem - IBE系统参数初始化完成
2025-10-07 12:32:43.962 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:44.157 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 58f413f6-7ecb-4b39-8536-513eadbf0a9d

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 12:32:44.224 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 12:32:45.759 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 12:32:47.151 [main] INFO  com.autocrowd.backend.BackendApplicationTests - Started BackendApplicationTests in 18.506 seconds (process running for 26.056)
2025-10-07 12:32:48.452 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 开始将订单信息上链: 订单ID=123
2025-10-07 12:32:48.453 [main] ERROR c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 订单上链失败: Cannot invoke "java.lang.Integer.toString()" because the return value of "com.autocrowd.backend.entity.Order.getUserId()" is null
java.lang.NullPointerException: Cannot invoke "java.lang.Integer.toString()" because the return value of "com.autocrowd.backend.entity.Order.getUserId()" is null
	at com.autocrowd.backend.service.impl.BlockchainServiceImpl.createOrderOnBlockchain(BlockchainServiceImpl.java:132)
	at com.autocrowd.backend.service.BlockchainServiceTest.createOrderOnBlockchain(BlockchainServiceTest.java:105)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:728)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:218)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:214)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:139)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:69)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:198)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:169)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:93)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:58)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:141)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:57)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:103)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:85)
	at org.junit.platform.launcher.core.DelegatingLauncher.execute(DelegatingLauncher.java:47)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:56)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:184)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:148)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:122)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
2025-10-07 12:32:48.667 [main] INFO  o.s.t.c.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.autocrowd.backend.service.IbeServiceTest]: IbeServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2025-10-07 12:32:48.716 [main] INFO  o.s.b.t.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.autocrowd.backend.BackendApplication for test class com.autocrowd.backend.service.IbeServiceTest
2025-10-07 12:32:48.800 [main] INFO  com.autocrowd.backend.service.IbeServiceTest - Starting IbeServiceTest using Java 21.0.6 with PID 35668 (started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 12:32:48.800 [main] INFO  com.autocrowd.backend.service.IbeServiceTest - No active profile set, falling back to 1 default profile: "default"
2025-10-07 12:32:49.474 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:32:49.474 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 12:32:49.510 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 35 ms. Found 7 JPA repository interfaces.
2025-10-07 12:32:49.517 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:32:49.517 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 12:32:49.524 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.525 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.526 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:32:49.527 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 8 ms. Found 0 Redis repository interfaces.
2025-10-07 12:32:50.136 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 12:32:50.148 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 12:32:50.171 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 12:32:50.177 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Starting...
2025-10-07 12:32:50.242 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-2 - Added connection com.mysql.cj.jdbc.ConnectionImpl@6f303c5d
2025-10-07 12:32:50.244 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Start completed.
2025-10-07 12:32:50.248 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 12:32:50.587 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 12:32:50.590 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:32:51.153 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 12:32:51.154 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 12:32:51.155 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 12:32:56.446 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化成功
2025-10-07 12:32:56.550 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:56.666 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 7e88e4a2-069e-48e8-86cf-41564e9ed39b

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 12:32:56.671 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 12:32:56.997 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 12:32:57.397 [main] INFO  com.autocrowd.backend.service.IbeServiceTest - Started IbeServiceTest in 8.676 seconds (process running for 36.302)
2025-10-07 12:32:57.446 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.460 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.460 [main] INFO  com.autocrowd.backend.service.IbeService - 成功为属性 USER_123 生成私钥
2025-10-07 12:32:57.473 [main] INFO  com.autocrowd.backend.service.IbeService - 数据加密成功，明文长度: 22，密文长度: 13
2025-10-07 12:32:57.480 [main] INFO  com.autocrowd.backend.service.IbeService - 数据解密成功，密文长度: 13，明文长度: 22
2025-10-07 12:32:57.481 [main] INFO  com.autocrowd.backend.service.IbeService - 属性 USER_123 有 访问权限
2025-10-07 12:32:57.481 [main] INFO  com.autocrowd.backend.service.IbeService - 属性 USER_123 无 访问权限
2025-10-07 12:32:57.488 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.488 [main] INFO  com.autocrowd.backend.service.IbeService - 属性 USER_123 有 访问权限
2025-10-07 12:32:57.488 [main] INFO  com.autocrowd.backend.service.IbeService - 属性 GUEST_789 无 访问权限
2025-10-07 12:32:57.496 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.496 [main] INFO  com.autocrowd.backend.service.IbeService - 成功为属性 USER_123 生成私钥
2025-10-07 12:32:57.504 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.504 [main] INFO  com.autocrowd.backend.service.IbeService - 数据加密成功，明文长度: 52，密文长度: 13
2025-10-07 12:32:57.505 [main] INFO  com.autocrowd.backend.service.IbeService - 成功为属性 USER_123 生成私钥
2025-10-07 12:32:57.505 [main] INFO  com.autocrowd.backend.service.IbeService - 数据解密成功，密文长度: 13，明文长度: 52
2025-10-07 12:32:57.512 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:32:57.512 [main] INFO  com.autocrowd.backend.service.IbeService - 数据加密成功，明文长度: 78，密文长度: 13
2025-10-07 12:32:57.513 [main] INFO  com.autocrowd.backend.service.IbeService - 成功为属性 USER_123 生成私钥
2025-10-07 12:32:57.513 [main] INFO  com.autocrowd.backend.service.IbeService - 成功为属性 DRIVER_456 生成私钥
2025-10-07 12:32:57.513 [main] INFO  com.autocrowd.backend.service.IbeService - 数据解密成功，密文长度: 13，明文长度: 78
2025-10-07 12:32:57.513 [main] INFO  com.autocrowd.backend.service.IbeService - 数据解密成功，密文长度: 13，明文长度: 18
2025-10-07 12:32:57.622 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 12:32:57.624 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:32:57.630 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 12:32:57.654 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-07 12:32:57.667 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 12:32:57.668 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:32:57.668 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown initiated...
2025-10-07 12:32:57.678 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-2 - Shutdown completed.
2025-10-07 12:34:02.256 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-07 12:34:02.300 [main] INFO  com.autocrowd.backend.BackendApplication - Starting BackendApplication using Java 17.0.8.1 with PID 33852 (D:\Project\Blockchain_NEV\backend\target\classes started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 12:34:02.301 [main] INFO  com.autocrowd.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-07 12:34:03.363 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:34:03.366 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 12:34:03.517 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 143 ms. Found 7 JPA repository interfaces.
2025-10-07 12:34:03.530 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 12:34:03.531 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 12:34:03.544 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.545 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.545 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.545 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.546 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.546 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.546 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 12:34:03.546 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-10-07 12:34:04.244 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-07 12:34:04.251 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-07 12:34:04.253 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-10-07 12:34:04.253 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-10-07 12:34:04.320 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-07 12:34:04.321 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1973 ms
2025-10-07 12:34:04.595 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 12:34:04.625 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-07 12:34:04.652 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 12:34:04.851 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 12:34:04.868 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 12:34:05.121 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@4cefa0be
2025-10-07 12:34:05.123 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 12:34:05.175 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 12:34:06.048 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 12:34:06.050 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 12:34:06.283 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 12:34:06.703 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 12:34:13.337 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化成功
2025-10-07 12:34:13.405 [main] INFO  c.a.backend.service.PairingBasedCryptosystem - IBE系统参数初始化完成
2025-10-07 12:34:13.406 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 12:34:13.469 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 5ce84a38-578c-4767-8e52-e8690ee0f1a7

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 12:34:13.480 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 12:34:14.029 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 12:34:14.518 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-07 12:34:14.526 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-07 12:34:14.536 [main] INFO  com.autocrowd.backend.BackendApplication - Started BackendApplication in 12.744 seconds (process running for 13.411)
2025-10-07 12:34:15.097 [RMI TCP Connection(1)-192.168.3.86] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-07 12:34:15.097 [RMI TCP Connection(1)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-07 12:34:15.098 [RMI TCP Connection(1)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-07 12:35:05.705 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:35:05.849 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:39:10.696 [http-nio-8080-exec-4] INFO  com.autocrowd.backend.controller.DriverController - [DriverController] 车主登录接口 - 接收到登录请求: DriverLoginRequest(phone=test, password=test)
2025-10-07 12:39:10.696 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录 - 手机号: test
2025-10-07 12:39:10.714 [http-nio-8080-exec-4] WARN  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录失败 - 手机号不存在: test
2025-10-07 12:39:11.065 [http-nio-8080-exec-5] INFO  com.autocrowd.backend.controller.DriverController - [DriverController] 车主登录接口 - 接收到登录请求: DriverLoginRequest(phone=13700000001, password=Test123456!)
2025-10-07 12:39:11.065 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录 - 手机号: 13700000001
2025-10-07 12:39:11.285 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录成功 - 司机ID: 2000, 用户名: driver001
2025-10-07 12:39:14.497 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:39:14.505 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:39:14.538 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:39:14.541 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:39:14.545 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:39:14.554 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:39:14.583 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:39:14.593 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:41:25.215 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:41:25.228 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:41:25.258 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:41:25.267 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:41:25.281 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:41:25.288 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:41:25.317 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:41:25.326 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:42:42.317 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:42:42.329 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:42:42.353 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:42:42.362 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:42:42.376 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:42:42.381 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:42:42.403 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:42:42.408 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:45:47.405 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:45:47.411 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:45:47.425 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:45:47.429 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:45:47.448 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:45:47.455 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:45:47.471 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 12:45:47.475 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 12:50:54.773 [http-nio-8080-exec-1] INFO  com.autocrowd.backend.controller.DriverController - [DriverController] 车主登录接口 - 接收到登录请求: DriverLoginRequest(phone=13700000001, password=Test123456!)
2025-10-07 12:50:54.774 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录 - 手机号: 13700000001
2025-10-07 12:50:54.859 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录成功 - 司机ID: 2000, 用户名: driver001
2025-10-07 12:52:41.115 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:52:41.119 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 12:56:11.018 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 12:56:11.023 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:03:38.486 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:03:38.495 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:03:38.516 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:03:38.523 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:03:38.539 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:03:38.545 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:03:38.567 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:03:38.577 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:03:38.690 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:03:38.695 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:03:38.718 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:03:38.724 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:04:50.639 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:04:50.647 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:04:50.960 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:04:50.964 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:04:51.283 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:04:51.287 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:04:51.610 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:04:51.611 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:04:51.613 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:04:51.614 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:04:51.950 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:04:51.953 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:05:30.312 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:05:30.318 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:05:30.334 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:05:30.339 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:05:30.355 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:05:30.363 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:05:30.377 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:05:30.384 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:05:30.410 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:05:30.415 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:05:30.460 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:05:30.466 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:08.750 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:08.753 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:09.066 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:09.071 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:09.081 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:09.085 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:09.409 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:09.411 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:13.370 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:13.376 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:13.394 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:13.401 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:13.416 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:13.421 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:13.438 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:13.444 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:13.480 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:13.485 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:13.504 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:13.508 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:31.491 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:31.499 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:31.633 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:31.639 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:31.696 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:31.700 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:31.713 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:06:31.721 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:06:31.734 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:31.738 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:06:31.778 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:06:31.782 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:08:38.219 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:08:38.223 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:13:55.719 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:13:55.726 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:13:55.742 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:13:55.748 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:13:55.761 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:13:55.766 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:13:55.780 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:13:55.785 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:13:55.817 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:13:55.822 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:13:55.844 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:13:55.854 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:23:43.344 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:23:43.350 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:23:43.366 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:23:43.373 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:00.293 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:00.296 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:00.558 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:00.561 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:02.253 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:02.258 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:02.578 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:02.582 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:02.593 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:24:02.596 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:24:02.924 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:24:02.927 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:24:05.351 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:05.355 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:05.674 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:05.679 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:06.284 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:06.289 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:06.552 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:24:06.556 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:24:06.612 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:24:06.615 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:24:06.630 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:24:06.633 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:25:38.016 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:25:38.020 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:27:22.169 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:27:22.173 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:27:22.489 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:27:22.493 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:31:28.569 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:31:28.574 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:31:28.576 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:31:28.581 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:31:28.608 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:31:28.611 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:31:28.615 [http-nio-8080-exec-6] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:31:28.618 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:31:28.938 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:31:28.942 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:31:29.017 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:31:29.023 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:31:29.256 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:31:29.262 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:31:29.279 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:31:29.283 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:32:11.145 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:32:11.146 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:32:11.149 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:32:11.151 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:32:11.169 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:32:11.176 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:32:11.179 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:32:11.184 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:32:11.493 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:32:11.497 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:32:11.823 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:32:11.824 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:32:11.827 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:32:11.829 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:32:12.163 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:32:12.166 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:34:26.971 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:34:26.972 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:34:26.974 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:34:26.977 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:34:26.989 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:34:26.991 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:34:26.995 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:34:26.996 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:34:27.312 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:34:27.316 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:34:27.325 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:34:27.329 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:34:27.635 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:34:27.638 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:34:27.963 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:34:27.966 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:36:34.683 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:36:34.688 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:36:34.688 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:36:34.692 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:36:34.709 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:36:34.710 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:36:34.714 [http-nio-8080-exec-3] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:36:34.716 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:36:35.025 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:36:35.029 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:36:35.041 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:36:35.045 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:36:35.350 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:36:35.353 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:36:35.364 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:36:35.368 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:46:16.922 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:46:16.926 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:46:16.929 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:46:16.931 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:46:16.950 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:46:16.950 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:46:16.954 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:46:16.955 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:46:17.283 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:46:17.289 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:46:17.362 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:46:17.366 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:46:17.617 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:46:17.626 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:46:17.640 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:46:17.644 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:46:40.181 [http-nio-8080-exec-9] WARN  o.s.w.s.m.support.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'PUT' is not supported]
2025-10-07 13:46:53.124 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 13:46:53.126 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 13:46:53.131 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 13:46:53.148 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-10-07 13:46:59.923 [background-preinit] INFO  org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 8.0.1.Final
2025-10-07 13:46:59.961 [main] INFO  com.autocrowd.backend.BackendApplication - Starting BackendApplication using Java 17.0.8.1 with PID 44624 (D:\Project\Blockchain_NEV\backend\target\classes started by GHOST in D:\Project\Blockchain_NEV\backend)
2025-10-07 13:46:59.962 [main] INFO  com.autocrowd.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-10-07 13:47:00.823 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 13:47:00.824 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-10-07 13:47:00.944 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 115 ms. Found 7 JPA repository interfaces.
2025-10-07 13:47:00.954 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode
2025-10-07 13:47:00.954 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2025-10-07 13:47:00.966 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.DriverRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.FinancialRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.OrderRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.ReviewRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.UserRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleConditionRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.967 [main] INFO  o.s.d.r.c.RepositoryConfigurationExtensionSupport - Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.autocrowd.backend.repository.VehicleRepository; If you want this repository to be a Redis repository, consider annotating your entities with one of these annotations: org.springframework.data.redis.core.RedisHash (preferred), or consider extending one of the following types with your repository: org.springframework.data.keyvalue.repository.KeyValueRepository
2025-10-07 13:47:00.968 [main] INFO  o.s.d.r.config.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 Redis repository interfaces.
2025-10-07 13:47:01.566 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-10-07 13:47:01.576 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-10-07 13:47:01.577 [main] INFO  org.apache.catalina.core.StandardService - Starting service [Tomcat]
2025-10-07 13:47:01.577 [main] INFO  org.apache.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.26]
2025-10-07 13:47:01.639 [main] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-10-07 13:47:01.639 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1632 ms
2025-10-07 13:47:01.886 [main] INFO  org.hibernate.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-10-07 13:47:01.928 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.5.2.Final
2025-10-07 13:47:01.955 [main] INFO  o.hibernate.cache.internal.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-10-07 13:47:02.168 [main] INFO  o.s.o.j.persistenceunit.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-10-07 13:47:02.187 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-10-07 13:47:02.453 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@48d464cf
2025-10-07 13:47:02.455 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-10-07 13:47:02.498 [main] WARN  org.hibernate.orm.deprecation - HHH90000025: MySQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)
2025-10-07 13:47:03.283 [main] INFO  o.h.e.t.jta.platform.internal.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-10-07 13:47:03.285 [main] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 13:47:03.482 [main] INFO  o.s.data.jpa.repository.query.QueryEnhancerFactory - Hibernate is in classpath; If applicable, HQL parser will be used.
2025-10-07 13:47:03.824 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 初始化区块链连接
2025-10-07 13:47:03.824 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链配置信息:
2025-10-07 13:47:03.824 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   MSP ID: Org1MSP
2025-10-07 13:47:03.824 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Channel Name: mychannel
2025-10-07 13:47:03.825 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Order Chaincode Name: ordersLedger
2025-10-07 13:47:03.825 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Financial Chaincode Name: financialsLedger
2025-10-07 13:47:03.825 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Endpoint: 10.147.17.184:7051
2025-10-07 13:47:03.825 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl -   Peer Host Alias: peer0.org1.example.com
2025-10-07 13:47:09.341 [main] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 区块链连接初始化成功
2025-10-07 13:47:09.405 [main] INFO  c.a.backend.service.PairingBasedCryptosystem - IBE系统参数初始化完成
2025-10-07 13:47:09.406 [main] INFO  com.autocrowd.backend.service.IbeService - IBE服务初始化完成
2025-10-07 13:47:09.506 [main] WARN  o.s.b.a.s.s.UserDetailsServiceAutoConfiguration - 

Using generated security password: 6cd1b255-6103-4ce4-911f-d9b8787e3946

This generated password is for development use only. Your security configuration must be updated before running your application in production.

2025-10-07 13:47:09.522 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name inMemoryUserDetailsManager
2025-10-07 13:47:10.525 [main] INFO  o.s.b.actuate.endpoint.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2025-10-07 13:47:11.405 [main] INFO  org.apache.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-10-07 13:47:11.417 [main] INFO  o.s.boot.web.embedded.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-10-07 13:47:11.431 [main] INFO  com.autocrowd.backend.BackendApplication - Started BackendApplication in 12.003 seconds (process running for 12.689)
2025-10-07 13:47:11.679 [RMI TCP Connection(3)-192.168.3.86] INFO  o.a.c.core.ContainerBase.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-10-07 13:47:11.679 [RMI TCP Connection(3)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-10-07 13:47:11.681 [RMI TCP Connection(3)-192.168.3.86] INFO  org.springframework.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-10-07 13:47:16.452 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:16.458 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:16.589 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:16.603 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:16.674 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:16.678 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:16.682 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:16.684 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:17.026 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:17.033 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:17.376 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:17.382 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:17.391 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:17.392 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:17.736 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:17.749 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:26.640 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到更新车辆状况请求: vehicleId=4000
2025-10-07 13:47:26.650 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleServiceImpl] 更新车辆状况: vehicleId=4000
2025-10-07 13:47:32.339 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:32.343 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:32.348 [http-nio-8080-exec-4] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:32.352 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:32.391 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:32.394 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:32.400 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:32.402 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:32.738 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:32.745 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:33.077 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:33.078 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:47:33.082 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:33.083 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:47:33.428 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:47:33.441 [http-nio-8080-exec-7] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:47:44.244 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到更新车辆状况请求: vehicleId=4000
2025-10-07 13:47:44.258 [http-nio-8080-exec-5] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleServiceImpl] 更新车辆状况: vehicleId=4000
2025-10-07 13:56:51.653 [http-nio-8080-exec-8] INFO  com.autocrowd.backend.controller.DriverController - [DriverController] 车主登录接口 - 接收到登录请求: DriverLoginRequest(phone=test, password=test)
2025-10-07 13:56:51.654 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录 - 手机号: test
2025-10-07 13:56:51.660 [http-nio-8080-exec-8] WARN  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录失败 - 手机号不存在: test
2025-10-07 13:56:51.891 [http-nio-8080-exec-2] INFO  com.autocrowd.backend.controller.DriverController - [DriverController] 车主登录接口 - 接收到登录请求: DriverLoginRequest(phone=13700000001, password=Test123456!)
2025-10-07 13:56:51.891 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录 - 手机号: 13700000001
2025-10-07 13:56:52.049 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverService] 车主登录成功 - 司机ID: 2000, 用户名: driver001
2025-10-07 13:56:52.636 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:56:52.644 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:56:52.953 [http-nio-8080-exec-1] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:56:52.965 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:56:52.982 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:56:52.989 [http-nio-8080-exec-1] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:56:53.043 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:56:53.051 [http-nio-8080-exec-6] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:56:55.670 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:56:55.676 [http-nio-8080-exec-4] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:56:55.939 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:56:55.955 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:56:56.061 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:56:56.068 [http-nio-8080-exec-8] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:56:56.082 [http-nio-8080-exec-2] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:56:56.087 [http-nio-8080-exec-2] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:57:13.317 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:13.323 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:13.667 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:13.680 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:23.570 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:23.575 [http-nio-8080-exec-8] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:23.906 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:23.914 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:31.942 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:31.951 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:32.321 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:32.326 [http-nio-8080-exec-5] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:34.030 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:34.036 [http-nio-8080-exec-7] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:34.262 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 处理获取车主资料请求: driverId = 2000
2025-10-07 13:57:34.269 [http-nio-8080-exec-3] INFO  c.autocrowd.backend.service.impl.DriverServiceImpl - [DriverServiceImpl] 获取车主资料成功: driver001
2025-10-07 13:57:34.354 [http-nio-8080-exec-9] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:57:34.360 [http-nio-8080-exec-9] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:57:34.380 [http-nio-8080-exec-10] INFO  c.autocrowd.backend.controller.VehicleController - [VehicleController] 收到获取车辆状况请求: vehicleId=4000
2025-10-07 13:57:34.385 [http-nio-8080-exec-10] INFO  c.a.backend.service.impl.VehicleServiceImpl - [VehicleService] 根据车辆ID获取车辆状况: vehicleId=4000
2025-10-07 13:59:19.959 [SpringApplicationShutdownHook] INFO  c.a.backend.service.impl.BlockchainServiceImpl - [BlockchainService] 销毁区块链连接
2025-10-07 13:59:19.960 [SpringApplicationShutdownHook] INFO  o.s.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-10-07 13:59:19.966 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-10-07 13:59:19.998 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
